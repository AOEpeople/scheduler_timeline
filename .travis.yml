language: php

php:
  - 5.4
  - 5.5
  - 5.6
  - 7.0
  - hhvm

env:
  - TYPO3_VERSION=^6.2 COVERAGE=0 FUNCTIONAL=0
  - TYPO3_VERSION=^7.6 COVERAGE=0 FUNCTIONAL=0
  - TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=0

matrix:
  exclude:
    - env: TYPO3_VERSION=^7.6 COVERAGE=0 FUNCTIONAL=0
      php: 5.4
    - env: TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=0
      php: 5.4
    - env: TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=0
      php: 5.5
    - env: TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=0
      php: 5.6
  include:
    - php: 5.5
      env: TYPO3_VERSION=^6.2 COVERAGE=0 FUNCTIONAL=1
    - php: 5.5
      env: TYPO3_VERSION=^7.6 COVERAGE=1 FUNCTIONAL=1
    - php: 5.5
      env: TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=1
  allow_failures:
    - env: TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=1
    - env: TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=0

notifications:
  email:
    recipients:
      - tomas.mikkelsen@aoe.com
    on_success: never
    on_failure: never

sudo: false

addons:
  apt:
    packages:
      - parallel
      - libxml2-utils
      - nodejs
      - npm

cache:
  directories:
    - $HOME/.composer/cache

before_install:
  - composer self-update
  - composer --version

before_script:
  # Installs TYPO3
  - composer require typo3/cms=$TYPO3_VERSION
   # If TYPO3_VERSION is NOT 6.2.x
  - >
    if [[ "$TYPO3_VERSION" != "^6.2" ]]; then
      export "TYPO3_PATH_WEB"=$PWD/.Build/Web;
    else
      export "TYPO3_PATH_WEB"=$PWD;
    fi
  # Restore composer.json
  - git checkout composer.json
  # Locating UnitTests.xml
  - export "UNIT_XML"=`find . -name 'UnitTests.xml' -type f`
  # Location FunctionalTests.xml
  - export "FUNCTIONAL_XML"=`find . -name 'FunctionalTests.xml' -type f`

script:
  - >
    echo;
    echo "Running xmllint (Xliff)";
    find Resources/Private/Language/ -name '*.xlf' -type f | xargs xmllint --noout --schema Tests/Linting/Resources/Xliff.xsd
  - >
    echo;
    echo "Running PHP lint";
    find . -name \*.php ! -path "./.Build/*" ! -path "./scripts/*" ! -path "./typo3_src/*" | parallel --gnu php -d display_errors=stderr -l {} > /dev/null \;
#  - >
#    echo;
#    echo "Running JavaScript lint";
#    npm install -g jslint;
#    find Resources/Public/JavaScript/ -name '*.js' ! -name 'jquery*' ! -name 'tooltip*' -type f | xargs jslint
  - >
    if [[ "$COVERAGE" == "0" ]]; then
      echo;
      echo "Running unit tests";
      .Build/bin/phpunit --colors -c $UNIT_XML Tests/Unit/
    fi
  - >
    if [[ "$COVERAGE" == "1" ]]; then
      echo;
      echo "Running unit tests";
      .Build/bin/phpunit --coverage-clover=unittest-coverage.clover --colors -c $UNIT_XML Tests/Unit/
    fi
  - >
    if [[ "$FUNCTIONAL" == "1" ]]; then
      echo;
      export typo3DatabaseName="typo3";
      export typo3DatabaseHost="localhost";
      export typo3DatabaseUsername="root";
      export typo3DatabasePassword="";
      find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo "Running functional test suite {}"; .Build/bin/phpunit --coverage-clover={}functionaltest-coverage.clover --colors -c $FUNCTIONAL_XML {}'
    fi
  - >
    if [[ "$COVERAGE" == "1" ]]; then
      echo;
      echo "Uploading code coverage results";
      wget https://scrutinizer-ci.com/ocular.phar
      php ocular.phar code-coverage:upload --format=php-clover unittest-coverage.clover
      find 'Tests/Functional' -wholename '*Test.php' -exec php ocular.phar code-coverage:upload --format=php-clover {}functionaltest-coverage.clover \;
    fi
